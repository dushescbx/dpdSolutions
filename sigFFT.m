%%
% clear all
close all
clc
rng(1)
if exist('functions','dir')
    p = genpath('functions');
    addpath(p);
end

%% model params
[param] = Params();
%% test signal gen
[results, param] = PAInOutData(param.dataFileName, ...
    param.MatPAModel, param, 0);
%% approx qam by sine wave
[paramQAM] = ParamsQAM(param);
[resultsQAM, paramQAM] = PAInOutData(paramQAM.dataFileName, ...
    paramQAM.MatPAModel, paramQAM, 0);
% 
% sa = SigSpectrum(...
%         [resultsQAM.OutputWaveform r...
%         resultsQAM.OutputWaveformFitMem resultsQAM.InputWaveform],...
%         results.sampleRate, resultsQAM.testSignal, [], ...
%         {'Actual PA QAM Output', 'Memory Polynomial sine Output',...
%         'Memory Polynomial QAM Output', 'PA Input'}, 1, 1);
%%
a = resultsQAM.InputWaveform...
        (1:length(results.InputWaveform));
sa = SigSpectrum(...
        [results.InputWaveform ...
        a],...
        param.PAModel.Fs, resultsQAM.testSignal, [], ...
        {'Actual PA sine Output'}, 1, 1);
paramQAM.PAModel.Fs - param.PAModel.Fs
% %