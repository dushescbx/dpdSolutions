
pindB = 0;
R = 50;
pin = 10.^((pindB)/10);
M = 4;
params.sps = 4; % Samples per symbol
params.beta = 0.35;
params.Nsym = 6*70;
data = randi([0 M-1], 1e5, 1);
modOut = qammod(data, M, "UnitAveragePower", true)...
    *sqrt(pin*R*params.sps);

% modOut_powdB = 10*log10(mean(abs(modOut).^2 ...
%     /R));
modOut_pow = (mean(abs(modOut).^2 ...
    /R));
[modOut_rrc, params] = tx_rrc_filter(params,...
    modOut);
modOutRRCPow = mean(abs(modOut_rrc).^2 ...
    /R);
% modOutRRCPowdB = 10*log10(mean(abs(modOut_rrc).^2 ...
%     /R));
IF = 4.6789;
modOut_rrc_interp = ...
    spline(1:length(modOut_rrc),...
    modOut_rrc, 1:1/IF:... 
    length(modOut_rrc));
% modOutRRCPowInterpdB = 10*log10(mean(abs(modOut_rrc_interp).^2 ...
%     /R));
modOutRRCPowInterp = (mean(abs(modOut_rrc_interp).^2 ...
    /R));